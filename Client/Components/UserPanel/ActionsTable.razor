@using OpenOsp.Model.Dtos
@using OpenOsp.Client.Components.UserPanel.Actions
@using OpenOsp.Client.Components.Forms
@using OpenOsp.Model.Enums
@inject HttpClient _http

<div class="flex mb-5 justify-between">
  <div>
    <ActionCreateModal OnCreateCallback="UpdateTable"/>
    <span>
      <label for="delete-actions-modal" class="btn btn-secondary" disabled="@(_checkedActions.Count() == 0)">Delete</label>
      <input type="checkbox" id="delete-actions-modal" class="modal-toggle" @bind="_isDeleteModalOpen">
      <div class="modal">
        <div class="modal-box">
          <h3 class="font-bold text-lg">Delete Actions</h3>
          <p class="py-4">Are you sure you want to delete @_checkedActions.Count() checked actions?<br/> It is permanent.</p>
          <div class="modal-action">
            <button @onclick="HandleDelete" class="btn btn-error">Confirm</button>
            <label for="delete-actions-modal" class="btn">Cancel</label>
          </div>
        </div>
      </div>
    </span>
  </div>
</div>
<div class="overflow-x-auto">
  <table class="table w-full">
    <thead>
    <tr>
      <th></th>
      <th>Type</th>
      <th>Start time</th>
      <th>End time</th>
      <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var action in _actions) {
      <CascadingValue Value="@action">
        <ActionRecord/>
      </CascadingValue>
    }
    </tbody>
    <tfoot>
    </tfoot>
  </table>
</div>

@code {
  
  [CascadingParameter(Name = "CheckedActions")]
  private ISet<int> _checkedActions { get; set; }

  private IEnumerable<ActionReadDto> _actions { get; set; } = new List<ActionReadDto>();

  private bool _isDeleteModalOpen = false;

  protected override async Task OnInitializedAsync() {
    await UpdateTable();
  }

  private async Task UpdateTable() {
    var result = await _http.GetFromJsonAsync<List<ActionReadDto>>("api/actions");
    if (result is not default(List<ActionReadDto>)) {
      _actions = result;
    }
  }

  private async Task HandleDelete() {
    foreach (var actionId in _checkedActions) {
      var result = await _http.DeleteAsync($"api/Actions/{actionId}");
      if (result.IsSuccessStatusCode) {
        _checkedActions.Remove(actionId);
      }
    }
    await UpdateTable();
    _isDeleteModalOpen = false;
  }

}
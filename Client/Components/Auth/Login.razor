@using OpenOsp.Model.Dtos
@using OpenOsp.Client.Components.Forms
@using OpenOsp.Client.Authentication
@using OpenOsp.Client.Components.Main
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

@if (showAuthenticationError) {
  <div class="alert alert-error">
    <div class="flex-1">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="w-6 h-6 mx-2 stroke-current"> 
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>                         
      </svg>
      <label>@authenticationError</label>
    </div>
  </div>
}
<EditForm Model="@_dto" OnValidSubmit="HandleLogin">
  <DataAnnotationsValidator/>
  <LabeledInputText @bind-Value="_dto.Email" type="email" placeholder="your@email.com"/>
  <LabeledInputText @bind-Value="_dto.Password" placeholder="password" SubLabel="@_forgotPasswordFragment"/>
  <div class="form-control mt-6">
    <button type="submit" class="btn btn-primary">Log in</button>
  </div>
</EditForm>

@code {

  private UserLoginDto _dto = new();

  private bool showAuthenticationError = false;
  private string authenticationError = string.Empty;

  private async Task HandleLogin() {
    showAuthenticationError = false;
    var result = await AuthService.Login(_dto);
    if (result is not null) {
      NavManager.NavigateTo("/userpanel");
    }
    else {
      authenticationError = "There was a problem logging in";
      showAuthenticationError = true;
    }
  }

  private RenderFragment _forgotPasswordFragment = __builder => {
    <div data-tip="Not available" class="tooltip tooltip-bottom tooltip-info">
      <a href="/" class="label-text-alt link-hover">Forgot password?</a>
    </div>
  };

}